top = text_grob("Abundance of disease-associated pathways in the Wallen and HMP2 datasets",
size = 24, face = 'bold')
) -> p1
gg_record(device = "png",
units = "in", dpi = 600,
height = 8, width = 18)
p1
ggsave("UFPF/Figures/quality control pathways wo sex age.jpg",
units = "in", dpi = 600,
height = 8, width = 18)
gg_stop_recording()
# plotting with significant stars
ggplot(sig_taxa_long, aes(x = LFC, y = taxon, fill = variable)) +
geom_bar(stat = "identity", position = "dodge") +
geom_errorbarh(
aes(xmin = LFC - standard_error, xmax = LFC + standard_error),
position = position_dodge(0.9),
height = 0.25,  # Adjust the height of the error bars
size = 0.5,    # Adjust the size of the error bars
color = "gray73"  # Set the color of the error bars
) +
geom_text(
aes(label = ifelse(significance, "*", "")),
position = position_dodge(0.9),
vjust = 0.4, # Adjust vertical position of stars
size = 10      # Adjust size of stars
) +
labs(
title = "Genus-level Differential Abundance Analysis",
x = "Log Fold Change",
y = "Genus",
fill = "Comparison"
) +
scale_fill_manual(
values = legend_colors,
name = "Pairwise Comparisons"
) +
theme_bw(base_size = 16) +
theme(
plot.title = element_text(size = 21, face = "bold", hjust = 0.5),
legend.text = element_text(size = 16),
axis.title.x = element_text(size = 18, color = "black"),
axis.title.y = element_text(size = 18, color = "black"),
axis.text.y = element_text(size = 18, color = "black", face = "italic"),
axis.text.x = element_text(size = 16, color = "black"),
strip.text = element_text(color = "white", face = "bold", size = rel(1.5))
)
ggsave("UFPF/Figures/ANCOMBC2 genus wo sex age.png", dpi = 600, units = "in",
height = 8, width = 10)
# -------------------------------------------------------------------------------
# Pathway output
ancom <- readRDS("UFPF/ANCOMBC2/UFPF ancombc2 pathways no sex age.rds")
res_prim = ancom$res
res_pair = ancom$res_pair             # 350 pathways examined
View(res_pair)
write.xlsx(as.data.frame(res_pair), "UFPF/ANCOMBC2/ANCOMBC2 tables/table all pathways wo sex age.xlsx")
# using the arsenal package instead
library(arsenal)
# demographics table
IBD_metadata <- readRDS("HMP2_Payami/IBD Metadata Age Filtered.rds")
IBD_metadata <- column_to_rownames(IBD_metadata, var = "Sample")
# removing some columns I don't need
columns_to_remove <- c(14:19)
IBD_metadata <- IBD_metadata[, -columns_to_remove]
IBD_metadata <- IBD_metadata %>%
rename(Age = consent_age, Diagnosis = diagnosis, Sex = sex,
Immunosuppressants = Immunosuppressants..e.g..oral.corticosteroids.,
Diagnosis_Age = Age.at.diagnosis, Site = site_name,
Colonoscopy_past_2_weeks = X2..In.the.past.2.weeks..have.you.undergone.a.colonoscopy.or.other.procedure,
Diarrhea_past_2_weeks = X4..In.the.past.2.weeks..have.you.had.diarrhea.,
Bowel_surgery = X6..Have.you.ever.had.bowel.surgery.)
# label probiotic column N or Y for probiotics taken within 7 days of collection
IBD_metadata <- IBD_metadata %>%
mutate(Probiotic = case_when(
grepl("^No", Probiotic) ~ "N",
Probiotic == "" ~ NA_character_,
TRUE ~ "Y"
))
# combining IBD
order <- c("nonIBD", "IBD", "Overall")
IBD_metadata$diagnosis2 <- factor(IBD_metadata$diagnosis2, levels = order)
IBD_metadata <- IBD_metadata %>%
mutate(Age = as.numeric(Age))
# reorder diagnosis groups
IBD_metadata$diagnosis2 <- factor(IBD_metadata$diagnosis2, levels = order)
IBD_metadata$Diagnosis <- factor(IBD_metadata$Diagnosis, levels = c("CD", "UC", "nonIBD"))
levels(IBD_metadata$Diagnosis)
arsenal_table <- tableby(diagnosis2 ~ Age + Sex + Diagnosis + Site + Probiotic + Immunosuppressants +
Antibiotics + Chemotherapy + Colonoscopy_past_2_weeks +
Diarrhea_past_2_weeks + Bowel_surgery,
data= IBD_metadata)
summary(arsenal_table, text=TRUE, title='HMP2 Demographics', pfootnote = TRUE)     # can remove pfootnote if you don't want to include what statistical test was used
# demographics table
IBD_metadata <- readRDS("HMP2_Payami/IBD Metadata Age Filtered.rds")
IBD_metadata <- column_to_rownames(IBD_metadata, var = "Sample")
# removing some columns I don't need
columns_to_remove <- c(14:19)
IBD_metadata <- IBD_metadata[, -columns_to_remove]
IBD_metadata <- IBD_metadata %>%
rename(Age = consent_age, Diagnosis = diagnosis, Sex = sex,
Immunosuppressants = Immunosuppressants..e.g..oral.corticosteroids.,
Diagnosis_Age = Age.at.diagnosis, Site = site_name,
Colonoscopy_past_2_weeks = X2..In.the.past.2.weeks..have.you.undergone.a.colonoscopy.or.other.procedure,
Diarrhea_past_2_weeks = X4..In.the.past.2.weeks..have.you.had.diarrhea.,
Bowel_surgery = X6..Have.you.ever.had.bowel.surgery.)
View(IBD_metadata)
# demographics table
IBD_metadata <- readRDS("HMP2_Payami/IBD Metadata Age Filtered.rds")
IBD_metadata <- column_to_rownames(IBD_metadata, var = "Sample")
# removing some columns I don't need
columns_to_remove <- c(14:19)
IBD_metadata <- IBD_metadata[, -columns_to_remove]
IBD_metadata <- IBD_metadata %>%
rename(Age = consent_age, Diagnosis = diagnosis, Sex = sex,
Immunosuppressants = Immunosuppressants..e.g..oral.corticosteroids.,
Diagnosis_Age = Age.at.diagnosis, Site = site_name,
Colonoscopy_past_2_weeks = X2..In.the.past.2.weeks..have.you.undergone.a.colonoscopy.or.other.procedure,
Diarrhea_past_2_weeks = X4..In.the.past.2.weeks..have.you.had.diarrhea.,
Bowel_surgery = X6..Have.you.ever.had.bowel.surgery.)
# label probiotic column N or Y for probiotics taken within 7 days of collection
IBD_metadata <- IBD_metadata %>%
mutate(Probiotic = case_when(
grepl("^No", Probiotic) ~ "N",
Probiotic == "" ~ NA_character_,
TRUE ~ "Y"
))
# combining IBD
order <- c("nonIBD", "IBD", "Overall")
IBD_metadata$diagnosis2 <- factor(IBD_metadata$diagnosis2, levels = order)
IBD_metadata <- IBD_metadata %>%
mutate(Age = as.numeric(Age))
# reorder diagnosis groups
IBD_metadata$diagnosis2 <- factor(IBD_metadata$diagnosis2, levels = order)
IBD_metadata$Diagnosis <- factor(IBD_metadata$Diagnosis, levels = c("CD", "UC", "nonIBD"))
levels(IBD_metadata$Diagnosis)
View(IBD_metadata)
# Filter out samples with missing values in specific variables
IBD_metadata_filtered <- IBD_metadata %>%
filter(!is.na(Probiotic))
View(IBD_metadata_filtered)
arsenal_table <- tableby(diagnosis2 ~ Age + Sex + Diagnosis + Site + Probiotic + Immunosuppressants +
Antibiotics + Chemotherapy + Colonoscopy_past_2_weeks +
Diarrhea_past_2_weeks + Bowel_surgery,
data = IBD_metadata_filtered)
summary(arsenal_table, text = TRUE, title = 'HMP2 Demographics', pfootnote = TRUE)
table <- summary(tableby(diagnosis2 ~ Age + Sex + Diagnosis + Site + Probiotic + Immunosuppressants +
Antibiotics + Chemotherapy + Colonoscopy_past_2_weeks +
Diarrhea_past_2_weeks + Bowel_surgery, data=IBD_metadata_filtered), text = NULL)
table <- as.data.frame(table)
View(table)
View(IBD_metadata)
# Filter out samples with missing values in specific variables
IBD_metadata_filtered <- IBD_metadata %>%
filter(!is.na(Bowel_surgery))
# Filter out samples with missing values in specific variables
IBD_metadata_filtered <- IBD_metadata %>%
filter(Bowel_surgery != "")
arsenal_table <- tableby(diagnosis2 ~ Age + Sex + Diagnosis + Bowel_surgery,
data = IBD_metadata_filtered)
summary(arsenal_table, text = TRUE, title = 'HMP2 Demographics', pfootnote = TRUE)
table <- summary(tableby(diagnosis2 ~ Age + Sex + Diagnosis + Bowel_surgery, data=IBD_metadata_filtered), text = NULL)
table <- as.data.frame(table)
View(table)
write.csv(table, 'HMP2_Payami/Figures/HMP2 IBD metadata table 2.csv')
# Filter out samples with missing values in specific variables
IBD_metadata_filtered <- IBD_metadata %>%
filter(Colonoscopy_past_2_weeks != "")
arsenal_table <- tableby(diagnosis2 ~ Age + Sex + Diagnosis + Colonoscopy_past_2_weeks,
data = IBD_metadata_filtered)
summary(arsenal_table, text = TRUE, title = 'HMP2 Demographics', pfootnote = TRUE)
table <- summary(tableby(diagnosis2 ~ Age + Sex + Diagnosis + Colonoscopy_past_2_weeks, data=IBD_metadata_filtered), text = NULL)
table <- as.data.frame(table)
View(table)
write.csv(table, 'HMP2_Payami/Figures/HMP2 IBD metadata table 3.csv')
# Filter out samples with missing values in specific variables
IBD_metadata_filtered <- IBD_metadata %>%
filter(Diarrhea_past_2_weeks != "")
arsenal_table <- tableby(diagnosis2 ~ Age + Sex + Diagnosis + Diarrhea_past_2_weeks,
data = IBD_metadata_filtered)
summary(arsenal_table, text = TRUE, title = 'HMP2 Demographics', pfootnote = TRUE)
table <- summary(tableby(diagnosis2 ~ Age + Sex + Diagnosis + Diarrhea_past_2_weeks, data=IBD_metadata_filtered), text = NULL)
table <- as.data.frame(table)
write.csv(table, 'HMP2_Payami/Figures/HMP2 IBD metadata table 4.csv')
# Filter out samples with missing values in specific variables
IBD_metadata_filtered <- IBD_metadata %>%
filter(!is.na(Probiotic))
arsenal_table <- tableby(diagnosis2 ~ Age + Sex + Diagnosis + Site + Probiotic + Immunosuppressants +
Antibiotics + Chemotherapy + Colonoscopy_past_2_weeks +
Diarrhea_past_2_weeks + Bowel_surgery,
data = IBD_metadata_filtered)
summary(arsenal_table, text = TRUE, title = 'HMP2 Demographics', pfootnote = TRUE)
table <- summary(tableby(diagnosis2 ~ Age + Sex + Diagnosis + Site + Probiotic + Immunosuppressants +
Antibiotics + Chemotherapy + Colonoscopy_past_2_weeks +
Diarrhea_past_2_weeks + Bowel_surgery, data=IBD_metadata_filtered), text = NULL)
table <- as.data.frame(table)
write.csv(table, 'HMP2_Payami/Figures/HMP2 IBD metadata table 1.csv')
# -------------------------------------------------------------------------------
# Wallen PD
# demographics table
PD_metadata <- readRDS("HMP2_Payami/Wallen PD Metadata.rds")
PD_metadata <- PD_metadata %>%
rename(Age = Age_at_collection, Diagnosis = Case_status)
PD_metadata <- PD_metadata %>%
mutate(Sex = ifelse(Sex == "M", "Male", ifelse(Sex == "F", "Female", Sex)))
# combining IBD
order <- c("Control", "PD")
PD_metadata$Diagnosis <- factor(PD_metadata$Diagnosis, levels = order)
arsenal_table <- tableby(Diagnosis ~ Age + Sex + Constipation + Diarrhea +
IBS + IBD + SIBO + Celiac_disease + Antibiotics_current +
Antibiotics_past_3_months + Laxatives + Indigestion_drugs +
Anti_inflammatory_drugs + Radiation_Chemo + Blood_thinners +
Cholesterol_med + Blood_pressure_med + Thyroid_med +
Asthma_or_COPD_med + Diabetes_med + Pain_med +
Depression_anxiety_mood_med + Birth_control_or_estrogen +
Antihistamines + Probiotic + Co_Q_10 + Sleep_aid, data= PD_metadata)
summary(arsenal_table, text=TRUE, title='Wallen PD Demographics', pfootnote = TRUE)     # can remove pfootnote if you don't want to include what statistical test was used
View(PD_metadata)
# exporting table
# to .CSV
table <- summary(tableby(Diagnosis ~ Age + Sex + Constipation + Diarrhea +
IBS + IBD + SIBO + Celiac_disease + Antibiotics_current +
Antibiotics_past_3_months + Laxatives + Indigestion_drugs +
Anti_inflammatory_drugs + Radiation_Chemo + Blood_thinners +
Cholesterol_med + Blood_pressure_med + Thyroid_med +
Asthma_or_COPD_med + Diabetes_med + Pain_med +
Depression_anxiety_mood_med + Birth_control_or_estrogen +
Antihistamines + Probiotic + Co_Q_10 + Sleep_aid, data=PD_metadata), text = NULL)
table <- as.data.frame(table)
write.csv(table, 'HMP2_Payami/Figures/Old/Wallen PD metadata table.csv')
# remove missing
PD_metadata_filtered <- PD_metadata %>%
filter(!is.na(Constipation))
arsenal_table <- tableby(Diagnosis ~ Constipation,
data = PD_metadata_filtered)
summary(arsenal_table, text = TRUE, title = 'Wallen PD Demographics', pfootnote = TRUE)
table <- summary(tableby(Diagnosis ~ Constipation, data=PD_metadata_filtered), text = NULL)
table <- as.data.frame(table)
View(table)
write.csv(table, 'HMP2_Payami/Figures/Old/Wallen PD metadata table 2.csv')
# remove missing
PD_metadata_filtered <- PD_metadata %>%
filter(!is.na(Diarrhea))
arsenal_table <- tableby(Diagnosis ~ Diarrhea,
data = PD_metadata_filtered)
summary(arsenal_table, text = TRUE, title = 'Wallen PD Demographics', pfootnote = TRUE)
table <- summary(tableby(Diagnosis ~ Diarrhea, data=PD_metadata_filtered), text = NULL)
table <- as.data.frame(table)
write.csv(table, 'HMP2_Payami/Figures/Old/Wallen PD metadata table 3.csv')
# remove missing
PD_metadata_filtered <- PD_metadata %>%
filter(!is.na(IBS))
arsenal_table <- tableby(Diagnosis ~ IBS,
data = PD_metadata_filtered)
summary(arsenal_table, text = TRUE, title = 'Wallen PD Demographics', pfootnote = TRUE)
table <- summary(tableby(Diagnosis ~ IBS, data=PD_metadata_filtered), text = NULL)
table <- as.data.frame(table)
write.csv(table, 'HMP2_Payami/Figures/Old/Wallen PD metadata table 4.csv')
# remove missing
PD_metadata_filtered <- PD_metadata %>%
filter(!is.na(IBD))
arsenal_table <- tableby(Diagnosis ~ IBD,
data = PD_metadata_filtered)
summary(arsenal_table, text = TRUE, title = 'Wallen PD Demographics', pfootnote = TRUE)
table <- summary(tableby(Diagnosis ~ IBD, data=PD_metadata_filtered), text = NULL)
table <- as.data.frame(table)
write.csv(table, 'HMP2_Payami/Figures/Old/Wallen PD metadata table 5.csv')
# remove missing
PD_metadata_filtered <- PD_metadata %>%
filter(!is.na(SIBO))
arsenal_table <- tableby(Diagnosis ~ SIBO,
data = PD_metadata_filtered)
summary(arsenal_table, text = TRUE, title = 'Wallen PD Demographics', pfootnote = TRUE)
table <- summary(tableby(Diagnosis ~ SIBO, data=PD_metadata_filtered), text = NULL)
table <- as.data.frame(table)
write.csv(table, 'HMP2_Payami/Figures/Old/Wallen PD metadata table 6.csv')
# remove missing
PD_metadata_filtered <- PD_metadata %>%
filter(!is.na(Celiac_disease))
arsenal_table <- tableby(Diagnosis ~ Celiac_disease,
data = PD_metadata_filtered)
summary(arsenal_table, text = TRUE, title = 'Wallen PD Demographics', pfootnote = TRUE)
# remove missing
PD_metadata_filtered <- PD_metadata %>%
filter(!is.na(Antibiotics_current))
arsenal_table <- tableby(Diagnosis ~ Antibiotics_current,
data = PD_metadata_filtered)
summary(arsenal_table, text = TRUE, title = 'Wallen PD Demographics', pfootnote = TRUE)
# remove missing
PD_metadata_filtered <- PD_metadata %>%
filter(!is.na(Antibiotics_past_3_months))
arsenal_table <- tableby(Diagnosis ~ Antibiotics_past_3_months,
data = PD_metadata_filtered)
summary(arsenal_table, text = TRUE, title = 'Wallen PD Demographics', pfootnote = TRUE)
# remove missing
PD_metadata_filtered <- PD_metadata %>%
filter(!is.na(Laxatives))
arsenal_table <- tableby(Diagnosis ~ Laxatives,
data = PD_metadata_filtered)
summary(arsenal_table, text = TRUE, title = 'Wallen PD Demographics', pfootnote = TRUE)
# remove missing
PD_metadata_filtered <- PD_metadata %>%
filter(!is.na(Indigestion_drugs))
arsenal_table <- tableby(Diagnosis ~ Indigestion_drugs,
data = PD_metadata_filtered)
summary(arsenal_table, text = TRUE, title = 'Wallen PD Demographics', pfootnote = TRUE)
# remove missing
PD_metadata_filtered <- PD_metadata %>%
filter(!is.na(Anti_inflammatory_drugs))
arsenal_table <- tableby(Diagnosis ~ Anti_inflammatory_drugs,
data = PD_metadata_filtered)
summary(arsenal_table, text = TRUE, title = 'Wallen PD Demographics', pfootnote = TRUE)
# remove missing
PD_metadata_filtered <- PD_metadata %>%
filter(!is.na(Blood_thinners))
arsenal_table <- tableby(Diagnosis ~ Blood_thinners,
data = PD_metadata_filtered)
summary(arsenal_table, text = TRUE, title = 'Wallen PD Demographics', pfootnote = TRUE)
# remove missing
PD_metadata_filtered <- PD_metadata %>%
filter(!is.na(Birth_control_or_estrogen))
arsenal_table <- tableby(Diagnosis ~ Birth_control_or_estrogen,
data = PD_metadata_filtered)
summary(arsenal_table, text = TRUE, title = 'Wallen PD Demographics', pfootnote = TRUE)
# HMP2 IBD
# demographics table
IBD_metadata <- readRDS("HMP2_Payami/IBD Metadata Age Filtered.rds")
IBD_metadata <- column_to_rownames(IBD_metadata, var = "Sample")
# removing some columns I don't need
columns_to_remove <- c(14:19)
IBD_metadata <- IBD_metadata[, -columns_to_remove]
IBD_metadata <- IBD_metadata %>%
rename(Age = consent_age, Diagnosis = diagnosis, Sex = sex,
Immunosuppressants = Immunosuppressants..e.g..oral.corticosteroids.,
Diagnosis_Age = Age.at.diagnosis, Site = site_name,
Colonoscopy_past_2_weeks = X2..In.the.past.2.weeks..have.you.undergone.a.colonoscopy.or.other.procedure,
Diarrhea_past_2_weeks = X4..In.the.past.2.weeks..have.you.had.diarrhea.,
Bowel_surgery = X6..Have.you.ever.had.bowel.surgery.)
# label probiotic column N or Y for probiotics taken within 7 days of collection
IBD_metadata <- IBD_metadata %>%
mutate(Probiotic = case_when(
grepl("^No", Probiotic) ~ "N",
Probiotic == "" ~ NA_character_,
TRUE ~ "Y"
))
order <- c("nonIBD", "IBD", "Overall")
IBD_metadata$diagnosis2 <- factor(IBD_metadata$diagnosis2, levels = order)
IBD_metadata <- IBD_metadata %>%
mutate(Age = as.numeric(Age))
# reorder diagnosis groups
IBD_metadata$diagnosis2 <- factor(IBD_metadata$diagnosis2, levels = order)
IBD_metadata$Diagnosis <- factor(IBD_metadata$Diagnosis, levels = c("CD", "UC", "nonIBD"))
levels(IBD_metadata$Diagnosis)
# Filter out samples with missing values in specific variables
# recombine later in excel
IBD_metadata_filtered <- IBD_metadata %>%
filter(!is.na(Probiotic))
arsenal_table <- tableby(diagnosis2 ~ Age + Sex + Diagnosis + Site + Probiotic + Immunosuppressants +
Antibiotics + Chemotherapy + Colonoscopy_past_2_weeks +
Diarrhea_past_2_weeks + Bowel_surgery,
data = IBD_metadata_filtered)
summary(arsenal_table, text = TRUE, title = 'HMP2 Demographics', pfootnote = TRUE)
table <- summary(tableby(diagnosis2 ~ Age + Sex + Diagnosis + Site + Probiotic + Immunosuppressants +
Antibiotics + Chemotherapy + Colonoscopy_past_2_weeks +
Diarrhea_past_2_weeks + Bowel_surgery, data=IBD_metadata_filtered), text = NULL)
# bowel_surgery
IBD_metadata_filtered <- IBD_metadata %>%
filter(Bowel_surgery != "")
arsenal_table <- tableby(diagnosis2 ~ Age + Sex + Diagnosis + Bowel_surgery,
data = IBD_metadata_filtered)
summary(arsenal_table, text = TRUE, title = 'HMP2 Demographics', pfootnote = TRUE)
library(readxl)
# Read the Excel files
ibd_species <- read_excel("HMP2_Payami/ANCOMBC2/No sex or age/table HMP2 IBD significant species wo sex age.xlsx")
ibd_genus <- read_excel("HMP2_Payami/ANCOMBC2/No sex or age/table HMP2 IBD significant genus wo sex age.xlsx")
View(ibd_species)
ibd_species$taxon <- gsub("_.*", "", ibd_species$taxon)
ibd_species$species <- gsub("_.*", "", ibd_species$species)
View(ibd_genus)
# Find taxa present in genus but not in species
taxa_unique_to_genus <- setdiff(taxa_genus, taxa_species)
# Extract the taxa columns
taxa_species <- ibd_species$taxon
taxa_genus <- ibd_genus$taxon
# Read the Excel files
ibd_species <- read_excel("HMP2_Payami/ANCOMBC2/No sex or age/table HMP2 IBD significant species wo sex age.xlsx")
ibd_genus <- read_excel("HMP2_Payami/ANCOMBC2/No sex or age/table HMP2 IBD significant genus wo sex age.xlsx")
ibd_species$species <- gsub("_.*", "", ibd_species$species)
ibd_species <- rename(ibd_species, taxon = species)
ibd_genus <- rename(ibd_genus, taxon = genus)
# Extract the taxa columns
taxa_species <- ibd_species$taxon
taxa_genus <- ibd_genus$taxon
# Find taxa present in genus but not in species
taxa_unique_to_genus <- setdiff(taxa_genus, taxa_species)
# Print or do further analysis with the taxa unique to genus
print(taxa_unique_to_genus)
# HMP2 IBD data IBD combined
ancom_IBD <- readRDS("HMP2_Payami/ANCOMBC2/HMP2 IBD species ancombc2 output wo sex age.rds")
res_prim_IBD = ancom_IBD$res
sig_taxa_IBD <- res_prim_IBD %>%
rowwise() %>%
filter(any(c_across(starts_with("diff_diagnosis2IBD"))))  # 64 sig species
sig_taxa_IBD <- sig_taxa_IBD[, c(1, 3, 15, 18)]
sig_taxa_IBD <- sig_taxa_IBD[order(sig_taxa_IBD$q_diagnosis2IBD), ]
# Payami PD data
ancom_PD <- readRDS("HMP2_Payami/ANCOMBC2/Wallen PD species ancombc2 output.rds")
res_prim_PD = ancom_PD$res
sig_taxa_PD <- res_prim_PD %>%
rowwise() %>%
filter(any(c_across(starts_with("diff_Case_statusPD"))))  # 11 sig species
sig_taxa_PD <- sig_taxa_PD[, c(1, 3, 19, 23)]
sig_taxa_PD <- sig_taxa_PD[order(sig_taxa_PD$q_Case_statusPD), ]
# subsetting enriched species
enriched_IBD <- sig_taxa_IBD[sig_taxa_IBD$lfc_diagnosis2IBD > 0, ]
enriched_PD <- sig_taxa_PD[sig_taxa_PD$lfc_Case_statusPD > 0, ]
# subsetting depleted species
depleted_IBD <- sig_taxa_IBD[sig_taxa_IBD$lfc_diagnosis2IBD < 0, ]
depleted_PD <- sig_taxa_PD[sig_taxa_PD$lfc_Case_statusPD < 0, ]
# Extract enriched species names
enriched_species_IBD <- unique(enriched_IBD$taxon)
enriched_species_PD <- unique(enriched_PD$taxon)
# Extract depleted species names
depleted_species_IBD <- unique(depleted_IBD$taxon)
depleted_species_PD <- unique(depleted_PD$taxon)
# using ggVennDiagram
x <- list(
"HMP2 IBD" = depleted_species_IBD,
"Wallen PD" = depleted_species_PD
)
venn <- Venn(x)
data <- process_data(venn)
# CUSTOMIZE GROUP COLORS
colorGroups <- c("HMP2 IBD"= "green", "Wallen PD" = "blue")
colfunc <- colorRampPalette(colorGroups)
col <- colfunc(3)
ggplot() +
geom_sf(aes(fill = name), data = venn_region(data), show.legend = FALSE) +
geom_sf(aes(color = name), data = venn_setedge(data), show.legend = FALSE) +
geom_sf_text(aes(label = name), size = 16, data = venn_setlabel(data)) +
geom_sf_text(aes(label = count), size = 20, data = venn_region(data)) +
scale_fill_manual(values = alpha(col, .25)) +
scale_color_manual(values = col) +
theme_void()
# Extract depleted species names
depleted_species_IBD <- unique(depleted_IBD$taxon)
depleted_species_PD <- unique(depleted_PD$taxon)
depleted_species_IBD
depleted_species_PD
# ------------
# SHARED pathways
depleted_paths <- readRDS("HMP2_Payami/ANCOMBC2/No sex or age/depleted pathways shared wo sex age.rds")
enriched_paths <- readRDS("HMP2_Payami/ANCOMBC2/No sex or age/enriched pathways shared wo sex age.rds")
# PATHWAYS ----------------------------------------------------------
# HMP2 IBD
paths <- readRDS("HMP2_Payami/ANCOMBC2/HMP2 IBD pathway ancombc2 output wo sex age.rds")
results <- paths$res
sig_path <- results %>%               # 162 significant pathways
rowwise() %>%
filter(any(c_across(starts_with("diff_diagnosis2IBD"))))
# Create a data frame for IBD significant pathways
ibd_sig_pathways <- sig_path[, c(1, 3, 6, 12, 15, 18)]
ibd_sig_pathways <- ibd_sig_pathways[order(ibd_sig_pathways$q_diagnosis2IBD), ]
ibd_enriched <- ibd_sig_pathways[ibd_sig_pathways$lfc_diagnosis2IBD > 0, ]   # 89
ibd_depleted <- ibd_sig_pathways[ibd_sig_pathways$lfc_diagnosis2IBD < 0, ]   # 73
# Wallen PD paths
paths <- readRDS("HMP2_Payami/ANCOMBC2/Wallen PD ancombc2 metacyc pathways.rds")
results <- paths$res
sig_path <- results %>%               # 198 significant pathways
rowwise() %>%
filter(any(c_across(starts_with("diff_Case_statusPD"))))
# Create a data frame for IBD significant pathways
pd_sig_pathways <- sig_path[, c(1, 3, 7, 11, 15, 19)]
pd_sig_pathways <- pd_sig_pathways[order(pd_sig_pathways$q_Case_statusPD), ]
pd_enriched <- pd_sig_pathways[pd_sig_pathways$lfc_Case_statusPD > 0, ]   # 46
pd_depleted <- pd_sig_pathways[pd_sig_pathways$lfc_Case_statusPD < 0, ]   # 152
# identifying shared depleted pathways for later
common_depleted_paths <- merge(ibd_depleted, pd_depleted, by = "taxon")   # 31
# identifying shared enriched pathways
common_enriched_paths <- merge(ibd_enriched, pd_enriched, by = "taxon")   # 7
# specify response variables
ancom_abundances <- readRDS("UFPF/ANCOMBC2/bias corrected abund genus wo sex age.rds")
View(ancom_abundances)
ancom_abundances <- ancom_abundances %>%
select(Klebsiella, Faecalimonas)
colnames(ancom_abundances)
ancom_abundances <- ancom_abundances %>%
select("Klebsiella", "Faecalimonas")
ancom_abundances <- as.data.frame(ancom_abundances)
ancom_abundances <- ancom_abundances %>%
select("Klebsiella", "Faecalimonas")
klebsiella <- ancom_abundances$Klebsiella
filtered_abundances <- ancom_abundances[, c("Klebsiella", "Faecalimonas")]
# specify response variables
ancom_abundances <- readRDS("UFPF/ANCOMBC2/bias corrected abund genus wo sex age.rds")
ancom_abundances <- ancom_abundances[, c("Klebsiella", "Faecalimonas")]
Metadata <- readRDS("UFPF/Metadata.rds")
View(Metadata)
colnames(Metadata)[c(2,6,12:53)] <- gsub("\\.", "_", colnames(Metadata)[c(2,6,12:53)])
View(p1)
View(Metadata)
View(Metadata)
# pull out predictor variables according to the demographics/metadata table stats
selected_columns <- Metadata %>%
select(Age, Indigestion_meds, Anti_TNF, Anti_inflammatory_non_NSAID_,
Depression_anxiety_meds, Iron_specific_supplement)
# pull out predictor variables according to the demographics/metadata table stats
selected_columns <- Metadata[, c(Age, Indigestion_meds, Anti_TNF, Anti_inflammatory_non_NSAID_,
Depression_anxiety_meds, Iron_specific_supplement)]
# pull out predictor variables according to the demographics/metadata table stats
selected_columns <- Metadata[, c("Age", "Indigestion_meds", "Anti_TNF", "Anti_inflammatory_non_NSAID_",
"Depression_anxiety_meds", "Iron_specific_supplement")]
colnames(Metadata)
